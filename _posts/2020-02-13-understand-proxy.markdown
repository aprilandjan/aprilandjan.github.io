---
layout: post
title:  understand proxy
link: understand-proxy
date:   2020-02-13 23:43:00 +0800
categories: system
---

由于疫情影响，很多公司最近都推行远程办公。但是很多业务是需要能接入公司内部网络才能开展的，为了能让天南海北的人用自己的网络访问公司的内网，想必大家是没有少接触各种“代理”软件的。即便接入了某些代理软件，可能还是有一些特殊的网络服务无法访问，情况会比较复杂。本着解决问题的精神，还是有必要了解下各种代理的方式和基本原理。

## proxy server

所谓代理，意即用户 A 将网络流量先发送到某个特殊的服务器 B，该服务器 B 再去获取目标网络资源 C，并将资源 C 返还给当前用户 A。在这个过程中，A 可能由于防火墙限制或者其他的网络隔离手段，直接无法访问到 C，但是服务器 B 具有与用户A、服务器 C 的互通访问权限，这样服务器 B 就起到了一个请求的“中间代理人”的角色，所以又称为代理服务器。

考虑一般的基于 http/https 协议的网络请求，假设用户 A 要自行实现这种访问资源 C 的代理服务，那应该要怎么做呢？

首先要考虑的是：A 到 C 的资源请求要怎样才能通过 B。最简单的，A 虽然是想去取得 C 的资源，但是请求还是直接发往 B，B 在接收到请求后，将请求的内容（包括 url, headers, payload 等）组装为 B 向 C 发起的请求，并把拿到结果返回给 A。即便在 https 的情况下，由于加密发生在传输层，而代理产生的过程都在上层业务中实现，和加密传输的过程无关，因此不会有什么影响。但是，这种代理也有明显的缺点，例如登录认证的场景下，假如 C 通过响应头 `set-cookie` 设置了带有 `domain` 限制的 `cookies` 作为用户凭证，那么 A 在拿到 B 返回给 A 的资源时可能就会因为 `domain` 无法匹配而认证失败。

在前端开发中，通常在本地启动的用于托管本地资源、开发调试的服务器就是一个代理服务器，通过一定的配置，可以使之代理第三方服务器接口的访问。

## `http_proxy`, `https_proxy` and `no_proxy`

## PAC

## DNS
