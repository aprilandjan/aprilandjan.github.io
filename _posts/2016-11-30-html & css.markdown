---
layout: post
title:  html & css
date:   2016-11-30 10:30:00 +0800
categories: css
---

此文收集一些 html & css 相关的内容

### 阻止IOS Safari默认解析电话号码

添加如下 meta 即可

```html
<meta name="format-detection" content="telephone=no">
```

### 页面内容下边距

如果用 margin 给页面的内容增加一个主要内容的下边距, 虽然在 PC 端(模拟器) 看是生效的, 但是在很多手机上这部分下边距消失了, 只有用 padding 才是正道。


### &lt;main&gt;&lt;/main&gt;

IE 11 不支持该标签(默认显示成了内联元素)


### mobile tap highlight

在移动设备上按下时希望实现触碰元素的高亮效果, 可以给这个元素加 `-webkit-tap-highlight-color`; 但是有时需要别的效果, 这个时候可以使用 `:active` 伪类来实现——然而还是不够, 在 iOS safari 上如此设置仍然没有效果。
后来参考了 weui 的 demo, 发现它给 body 添加了一个空的事件 `ontouchbegin`, 配合 `active` 伪类, 成功的达成目标!


### click delay

在移动设备上, 进行点击操作通常有300MS的延迟, 这300MS的延迟带来的操作体验大打折扣。看了weui的代码, 才发现还有 [`fastclick`](https://www.npmjs.com/package/fastclick) 这样一个方便的工具。使用方式如下:

```javascript
import fastclick from 'fastclick'
fastclick.attach(document.body)
```


### height of inline-block with `overflow:hidden`

给某 inline-block 添加溢出文本 ellipsis 的时候出现的问题, 发现如果加了 `overflow:hidden` 会平白无故的让父级容器变高一些。
解决办法是给这个 inline-block 添加 `vertical-align: top`, 原理在[这里](http://stackoverflow.com/questions/20310690/overflowhidden-on-inline-block-adds-height-to-parent)


### ios webview 无法动态改变 title

有时会通过JS改变页面的 title, 但是据开发说 IOS WEBVIEW 可能需要一个加载动作来触发再次重命名TITLE, 实测IOS 微信中是这样的。以下是一种实现方式:

```javascript
function setTitle (t) {
  setTimeout(() => {
    document.title = t
    const iframe = document.createElement('iframe')
    iframe.style.visibility = 'hidden'
    iframe.style.width = '1px'
    iframe.style.height = '1px'
    iframe.src = '/favicon.ico' // 这里
    iframe.onload = () => {
      setTimeout(() => {
        document.body.removeChild(iframe)
      }, 0)
    }
    document.body.appendChild(iframe)
  }, 0)
}
```


### webview 右划返回历史纪录上一条

做前端路由的SPA的时候, 如果用的路由模式是 `history`, 那么在微信里无法通过右划返回历史纪录上一条; 但是如果用的是默认的 `hash` 模式的前端路由, 微信里就可以了。
这两种模式在 IOS safari 内都可以右划返回上一层, 但是用 vue 做的路由页面 transition 时, 会必然触发一次切换路由页面的动画, 会显得不那么好看了。

### DIV 里的水平滚动条 平滑滚动

在移动端，DIV 里的水平滚动条表现的很迟钝，不平滑。幸好可以通过以下 css 解决[reference].(https://weblog.west-wind.com/posts/2013/jun/01/smoothing-out-div-scrolling-in-mobile-webkit-browsers):

```css
.scroll-div {
  -webkit-overflow-scrolling: touch;
}
```

如果使用以下代码阻止了移动端页面的上下滚动回弹行为：

```javascript
document.addEventListener('touchmove', function (e) {e.preventDefault()})
```

那么该 css 属性会失效。解决办法：设置 `html` `body` 的定位为 `position: fixed`，去掉阻止默认滚动的 js 即可。

### 保留滚动功能，但是隐藏滚动条

[Reference](http://stackoverflow.com/questions/2572163/horizontal-scrolling-only?rq=1)

```
::-webkit-scrollbar {
    width: 0px;  /* remove scrollbar space */
    background: transparent;  /* optional: just make scrollbar invisible */
}
/* optional: show position indicator in red */
::-webkit-scrollbar-thumb {
    background: #FF0000;
}
```

此方式在 safari 上配合 `-webkit-overflow-scrolling: touch;` 使用会有bug，导致自定义的滚动条样式没有生效，比如无法隐藏滚动条等等。

### Chrome 表单样式

Chrome 浏览器会自动给表单元素加上一些功能样式，比如自动完成、自动填充的黄色背景等等，有时候完全不需要这些功能。以下是一些解决办法([Reference](https://www.zigpress.com/2014/11/22/stop-chrome-messing-forms/))：

- 禁止自动完成：

  注意要给 `form` `input` 都加上 `autocomplete="off"`, 否则 chrome 里可能救不起作用了。

  ```html
  <form autocomplete="off">
    <input type="whatever" autocomplete="off"/>
  </form>
  ```

- 禁止自动填充:

  Chrome 内遇到了带有密码输入框的表单，会自动尝试填充表单的内容。为了避免这种行为，不得不在表单开头添加两个隐藏的输入框，让 chrome 自作聪明的填在那里。

  ```html
  <form>
    <input type="text" style="display:none;"/>
    <input type="password" style="display:none;"/>
    <input type="text" value="" autocomplete="off"/>
    <input type="password" value="" autocomplete="off"/>
  </form>
  ```

- 自动填充区域的黄色背景：

  不得不说自动填充区域的默认的黄色背景简直丑的让人难以忍受，好在可以通过样式解决。

  ```css
  input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 500px white inset;
  }
  ```